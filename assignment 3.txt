ASSIGNMENT 4:

33.	Write a program to demonstrate functionalities of this keyword in java. 

class student{
	private int rollno;
	private String name;
	
	void setData(int rollno, String name){
		this.rollno = rollno;
		this.name = name;
	}
	
	void showData(){
		System.out.println("rollno ="+rollno+" name = "+name);
	}
}

class assign33{
	public static void main(String args[]){
		student s = new student();
		s.setData(100, "Sayali");
		s.showData();
	}
}

===================================================================

34.	Create a class Circle that has two data members, one to store the radius and another to store area and three methods first init() method to input radius from user, second calculateArea() method to calculate area of circle and third display() method to display values of radius and area. Create class CircleDemo ( main class) that creates the Circle object and calls init(), calculateArea() and display() methods.

class Circle
{
    private float radius;
    private double area;

    void init(float radius)
    {
       
      this.radius = radius;
        
    }

    void calculateArea()
    {
        area = 3.14 * radius * radius;
        
    }

    void display()
    {
        System.out.println("Radius of Circle : " + radius);
        System.out.println("Area of a Circle : " + area);
    }

    
}

class assign34_1
{
    public static void main(String args[])
    {
        Scanner sc = new Scanner(System.in);
        System.out.println("ENTER THE RADIUS OF CIRCLE :");
        float radius = sc.nextFloat();
        sc.close();
        Circle c = new Circle();
        c.init(radius);
        c.calculateArea();
        c.display();
    }
}

===================================================================

35.	Create a class MathOperation that has four static methods. add() method that takes two integer numbers as parameter and returns the sum of the numbers. subtract() method that takes two integer numbers as parameter and returns the difference of the numbers. multiply() method that takes two integer numbers as parameter and returns the product. power() method that takes two integer numbers as parameter and returns the power of first number to second number. Create another class Demo (main class) that takes the two numbers from the user and calls all four methods of MathOperation class by providing entered numbers and prints the return values of every method.

import java.util.Scanner;
class MathOperation{
	static int a;
	static int b;
	static int c;
	
	static void add(int a, int b){
		c = a + b;
		System.out.println("Sum of numbers is: "+c);
	}
	
	 static void subtract(int a, int b){
		c = a - b;
		System.out.println("subtraction of numbers is: "+c);
	}
		
	static void multiply(int a, int b){
		c = a * b;
		System.out.println("multiplication of numbers is: "+c);
	}
	
	static void power(int a, int b){
		c = a^b;
		System.out.println("power of "+a +b +"is: "+c);
	}
	

		
}

		
class assign35{
	public static void main(String arg[]){
		Scanner sc = new Scanner(System.in);
		System.out.println("Enter two numbers");
		
		int a = sc.nextInt();
		int b = sc.nextInt();
		
		MathOperation.add(a,b);
		MathOperation.subtract(a, b);
		MathOperation.multiply(a,b);
		MathOperation.power(a,b);
		
	}
}

===================================================================

36.	Create a class MathOperation containing overloaded methods ‘multiply’ to calculate multiplication of following arguments. 
a.	 two integers 
b.	 three floats 
c.	 all elements of array 
d.	one double and one integer 

import java.util.Scanner;

class MathOperation{
	private int a,b; 
	private int tot=1;
	private float x,y,z;
	
	void multiply(int a, int b){
		int res = a * b;
		
		System.out.println("Multiplication is: "+res);
	}
	
	void multiply(float x, float y, float z){
		float res = x * y * z;
		
		System.out.println("Multiplication is: "+res);
	}
	
	void multiply(double a, int b){
		double res = a * b;
		
		System.out.println("Multiplication is: "+res);
	}
	
	void multiply(){
		int arr[] = {1,2,3,4};
		for(int i=0; i<arr.length;i++){
		 tot = tot * arr[i];
		}
		System.out.println("multiplication of array is: "+tot);
	}
}


class assign36{
	public static void main(String args[]){
		MathOperation m = new MathOperation();
		
		m.multiply(2,3);
		m.multiply(2.0F, 3.0F, 4.0F);
		m.multiply(2.0, 3);
		m.multiply();
	}
}

===================================================================
	

37.	Create a class Person with properties (name and age) with following features. 
a.	Default age of person should be 18.
b.	A person object can be initialized with name and age.
c.	Method to display name and age of person
Create another class PersonDemo ( main class ) that demonstrates the functionalities of Person class by creating Person object and calling methods.

===================================================================


38.	Create a class Employee with three data members (empNo, salary and totalSalary) and following features.
a.	Only parameterized constructor. [Do not overload the constructor]
b.	totalSalary always represents salary total of all the employees created.
c.	empNo should be auto incremented.
d.	display total employees and totalSalary using a method.
Create another class EmployeeDemo (main class) that creates some Employee objects and calls Employee method to display no. of employees and total of their salaries.


39.	Create class Product with three data members (pid, price, quantity) and parameterized constructor that takes values for all three data members.  
Create a main method in different class (say ProductDemo) and perform following task:
a. Accept information for five Product objects from user and store objects in an array
b. Find pid of product with highest price. 
c. Create a static method (with array of product’s object as argument) in Product class to calculate and return total amount spent on all products. ( amount spent on single product = price of product * quantity of product )


40.	Create a class Student having data members name, roll no., age and score. Write a program to accept 10 records of student and store them in an array. And then arrange the student records based on the score group [0-50], [50-65], [65-80], [80-100].

===================================================================


41.	Write a program to demonstrate this() construct functionality.

class Employee{
	private int empid;
	private String empName;
	
	Employee(){
		//this(100,"ABC");
		System.out.println("no arg");
	}
	
	Employee(int empid, String empName){
		this();
		this.empid=empid;
		this.empName=empName;
		System.out.println("parameterised const");
	}
	
	void show(){
		System.out.println(empid+" "+empName);
	}
}

class assign37{
	public static void main(String args[]){
		Employee e = new Employee(1,"f");
		e.show();
	}
}

===================================================================


42.	Create a class Tile to store the edge length of a square tile, and create another class Floor to store length and width of a rectangular floor. Add method totalTiles(Tile t) in Floor class with Tile as argument to calculate the whole number of tiles needed to cover the floor completely.

import java.lang.Math;
import java.util.Scanner;

class Tile{
	private int elength;
	Tile(){
		elength = 0;
	}
	Tile(int elength){
		this.elength = elength;
	}
	int getLength(){
		return elength;
	}
}

class Floor{
	private int length;
	private int width;
	
	Floor(){
		length = width = 0;
	}
	Floor(int length,int width){
		this.length = length;
		this.width = width;
	}
	
	int  totalTiles(Tile t){
		int no = Math.round((length*width)/(t.getLength()*t.getLength()));
		return no;
	}
	public static void main(String []args){
		System.out.print("Enter Square Tiles Edges length : ");
		Scanner sc = new Scanner(System.in);
		int tileL = sc.nextInt();
		Tile t = new Tile(tileL);
		System.out.print("\nEnter floor Length : ");
		int length = sc.nextInt();
		System.out.print("\nEnter floor Width : ");
		int width = sc.nextInt();
		Floor f = new Floor(length,width);
		System.out.println("\nTotal no of Tiles required : " + f.totalTiles(t));
	}
}

===================================================================


43.	Create a class OneBHK with instance variables roomArea, hallArea and price. Then create default constructor that initializes instance variables with some values and a parameterized constructor that takes values for all instance variables and stores them in instance variables. Now create a method named show()  to print OneBHK’s instance variable values.
Create another class TwoBHK which has (inherites) all the properties and behaviors of OneBHK and a new instance variable room2Area. Then create default constructor to initialize all 4 instance variables and a parameterized constructor to take the values for initialization of all instance variables. Override show() method to print all data member information.
Write main method in another class (Say Demo) and store three TwoBHK flat’s information and print information using show method. Also print total amount of all flats.


import java.util.Scanner;

class OneBHK{
		private double roomArea;
		private double hallArea;
		private double price;
		
		OneBHK(){
			roomArea = 1000;
			hallArea = 3000;
			price = 1_00_000;
		}
		
		OneBHK(double roomArea,double hallArea,double price){

			this.roomArea = roomArea;
			this.hallArea = hallArea;
			this.price = price;
		}

		double getRoomArea(){
			return roomArea;
		}
		double getHallArea(){
			return hallArea;
		}

		double getPrice(){
			return price;
		}

		void show(){
			System.out.println("1 BHK : \nRoom Area : "+ roomArea + "\nHall Area : " + hallArea + "\nPrice : " + price);
		}
}

class TwoBHK extends OneBHK{
		private double room2Area;

		TwoBHK(){
			super();
			room2Area = 1500;
			}

		TwoBHK(double room2Area){
			super();
			this.room2Area = room2Area;
		}

		TwoBHK(double room1Area,double room2Area,double hallArea,double price){
			super(room1Area,hallArea,price);
			this.room2Area = room2Area;
		}

		void show(){
			System.out.println("\n2 BHK : \nRoom Area : "+ this.getRoomArea()+"\nRoom 2 Area : "+ room2Area + "\nHall Area : " + this.getHallArea() + "\nPrice : " + this.getPrice()+"\n");
		}
}

class Que43{
		public static void main(String []args){
			Scanner sc = new Scanner(System.in);
			System.out.println("Enter 1 BHK Detail : ");
			System.out.println("\nEnter Room 1 Area : ");
			double room1 = sc.nextDouble();
			System.out.println("Enter Room 2 Area : ");
			double room2 = sc.nextDouble();
			System.out.println("Enter Hall Room Area : ");
			double hallroom = sc.nextDouble();
			System.out.println("Enter Price : ");
			double price = sc.nextDouble();
			TwoBHK b1 = new TwoBHK(room1,room2,hallroom, price);
				
			System.out.println("Enter Room 2 Area : ");
			room2 = sc.nextDouble();
	 		TwoBHK b2 = new TwoBHK(room2);
			
			TwoBHK b3 = new TwoBHK();
			
			b1.show();
			b2.show();
			b3.show();
			
			price = b1.getPrice() + b2.getPrice() + b3.getPrice();
			System.out.println("Total Amount of Flats (Rs): "+price);
			sc.close();
	}
} 
